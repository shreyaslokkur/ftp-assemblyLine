<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:mvc="http://www.springframework.org/schema/cache"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

	<context:spring-configured />
	<context:annotation-config />
	<!--<context:component-scan base-package="com.lks.uploader"/>-->

	<bean
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >

		<property name="locations">
			<list>
				<value>classpath:/app.properties</value>
			</list>

		</property>
	</bean>


	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">

		<property name="driverClass" value="${jdbc.driverClassName}" />
		<property name="jdbcUrl" value="${jdbc.url}" />
		<property name="user" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxPoolSize" value="${jdbc.maxPoolSize}"/>
		<property name="minPoolSize" value="${jdbc.minPoolSize}"/>
		<property name="maxStatements" value="${jdbc.maxStatements}"/>
		<property name="testConnectionOnCheckout" value="${jdbc.testConnection}"/>
		<property name="acquireRetryDelay" value="${jdbc.acquireRetryDelay}"/>
		<property name="breakAfterAcquireFailure" value="${jdbc.breakAfterAcquireFailure}"/>
		<property name="unreturnedConnectionTimeout" value="${jdbc.unreturnedConnectionTimeout}"/>
		<property name="preferredTestQuery" value="${jdbc.preferedTestQuery}"/>
		<property name="idleConnectionTestPeriod" value="${jdbc.idleConnectionTestPeriod}"/>
		<property name="maxIdleTime" value="${jdbc.maxIdleTime}"/>
		<property name="maxConnectionAge" value="${jdbc.maxConnectionAge}"/>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mappingResources">
			<list>
				<value>orm/Users.hbm.xml</value>
				<value>orm/UserRoles.hbm.xml</value>
				<value>orm/Document.hbm.xml</value>
				<value>orm/DocumentArchive.hbm.xml</value>
				<value>orm/Branch.hbm.xml</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.show_sql">false</prop>
			</props>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" mode="aspectj" />

	<bean id="stateMachineFactory" class="com.lks.stateMachine.StateMachineFactory"/>


	<bean id="userDao" class="com.lks.orm.dao.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="documentUploadDao" class="com.lks.orm.dao.DocumentUploadDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="branchDao" class="com.lks.orm.dao.BranchDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="commentsDao" class="com.lks.orm.dao.CommentsDaoImpl">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="documentUploadService" class="com.lks.uploader.DocumentUploadService">
	</bean>

	<bean id="branchService" class="com.lks.security.BranchService">
	</bean>

	<bean id="userDaoFactory" class="com.lks.orm.dao.UserDaoFactory">
		<property name="userDao" ref="userDao" />
	</bean>

	<bean id="userDetailService" class="com.lks.security.AuthenticationService"/>

	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="${ftp.max.file.size}" />
	</bean>

	<bean id="documentUtils" class="com.lks.core.DocumentUtils">
		<property name="tatTime" value="${tat.time}"/>
		<property name="offset" value="${app.pagination.offset}"/>
	</bean>

	<bean id="ftpUploader" class="com.lks.core.FTPUploader">
		<constructor-arg value="${ftp.server.url}"/>
		<constructor-arg value="${ftp.server.username}"/>
		<constructor-arg value="${ftp.server.password}"/>
	</bean>

	<bean id="ftpService" class="com.lks.uploader.FTPService">
		<property name="rootDir" value="${ftp.server.rootDir}"/>
	</bean>

</beans>
